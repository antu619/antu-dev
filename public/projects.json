[
    {
        "id": "1",
        "title": "Theater Seat",
        "images": [
            "https://i.ibb.co/VvNBPsN/theater-seat-1.png",
            "https://i.ibb.co/tqtFk5M/theater-seat-2.png",
            "https://i.ibb.co/M6Qxt42/theater-seat-3.png",
            "https://i.ibb.co/McQmmTL/theater-seat-4.png",
            "https://i.ibb.co/v3WXRnk/theater-seat-5.png",
            "https://i.ibb.co/zSkyG2t/theater-seat-6.png",
            "https://i.ibb.co/CMjLyCJ/theater-seat-7.png",
            "https://i.ibb.co/k9y9m30/theater-seat-8.png",
            "https://i.ibb.co/09CnhdJ/theater-seat-9.png"
            ],
        "description": "Theater Seat is a comprehensive MERN stack web application designed for seamless theater ticket booking. Users can register, log in, and efficiently manage their bookings through an intuitive interface. The application leverages Firebase for robust authentication and Stripe for secure payment processing. Key features include user authentication with email/password or Google via Firebase, protected routes ensuring secure access to dashboard pages, and efficient event management allowing users to view, book, and manage tickets. Payment processing is streamlined through Stripe, while free tickets bypass the payment option. Administrators can view all users, and upload and update event details. Data is securely stored in MongoDB, encompassing users, events, bookings, and payment details. API routes are fortified with JWT tokens for enhanced security. The frontend is crafted with React.js, Tailwind CSS, and Daisy UI for a modern, responsive design, while the backend employs Node.js and Express.js. To get started, clone the repository, navigate to the project directory, install dependencies with npm install, configure Firebase, MongoDB, and Stripe, then run the client site and server using npm run dev. The payment system can be tested using the card number 4242424242424242, any 3 digits for CVC, a future date, and any 5-digit postal code. For a detailed experience, you can visit the live application.",
        "email": "antu.das.619@gmail.com",
        "number": "+8801885720409.",
        "clientRepo": "https://github.com/antu619/theater-seat",
        "serverRepo": "https://github.com/antu619/theater-seat-server",
        "live": "https://theater-seat-9028b.web.app/"
    },
    {
        "id": "2",
        "title": "traveLLer",
        "images": [
            "https://i.ibb.co/sWvh0hw/traveLLer-1.png",
            "https://i.ibb.co/HB76QBj/traveLLer-2.png",
            "https://i.ibb.co/JmyKbWF/traveLLer-3.png",
            "https://i.ibb.co/VM4pZ8f/traveLLer-4.png",
            "https://i.ibb.co/h2gHCcY/traveLLer-5.png",
            "https://i.ibb.co/c3z2VYr/traveLLer-6.png",
            "https://i.ibb.co/m664DFs/traveLLer-7.png",
            "https://i.ibb.co/BVWNCmd/traveLLer-8.png",
            "https://i.ibb.co/6nGVMRZ/traveLLer-9.png",
            "https://i.ibb.co/M8Z4CNL/traveLLer-10.png"
            
            ],
        "description": "traveLLer is an immersive travel blogging platform crafted with cutting-edge technologies like the MERN stack, Tailwind CSS, Daisy UI, and Firebase Authentication. Our platform offers a seamless experience for travel enthusiasts, featuring a dynamic homepage showcasing diverse travel experiences, a comprehensive posts page with advanced search functionality, and dedicated sections for About, Contact, and Blogs. With a user-friendly dashboard accessible upon registration or login, users can personalize their profiles, manage their posts, and engage in various activities effortlessly. Leveraging React Router DOM and Firebase Authentication, traveLLer ensures secure access to user data and activities. Whether it's updating profile information, browsing authored posts, or creating new content, traveLLer provides intuitive tools and features to enhance the travel blogging experience. For installation, simply follow these steps: Clone the repository, navigate to the project directory, install dependencies using npm install, set up Firebase for authentication, set up MongoDB for database operations, and run the frontend and backend servers using npm run dev.",
        "email": "antu.das.619@gmail.com",
        "number": "+8801885720409.",
        "clientRepo": "https://github.com/antu619/traveller-client",
        "serverRepo": "https://github.com/antu619/traveller-server",
        "live": "https://traveller-4e41f.web.app/"
    },
    {
        "id": "3",
        "title": "Tasty Recipes",
        "images": [
            "https://i.ibb.co/5WwCRcd/tasty-recipes-1.png",
            "https://i.ibb.co/frJPNJt/tasty-recipes-2.png",
            "https://i.ibb.co/qNH8kTf/tasty-recipes-3.png",
            "https://i.ibb.co/m6q3D1k/tasty-recipes-4.png",
            "https://i.ibb.co/Nxpv62T/tasty-recipes-5.png",
            "https://i.ibb.co/n64WM82/tasty-recipes-6.png",
            "https://i.ibb.co/y5ZJsKY/tasty-recipes-7.png",
            "https://i.ibb.co/M8B69SR/tasty-recipes-8.png"
            ],
        "description": "'Tasty Recipes' serves up a delectable blend of culinary exploration and digital prowess, marrying React.js with Firebase to create an enticing platform for gastronomic enthusiasts. Embark on a journey through a world of flavors, where each dish is a testament to the artistry of cooking and the power of technology. This project boasts a robust authentication system, allowing users to login seamlessly via email/password, Google, or GitHub credentials. Once inside, protected routes ensure that only authenticated users can feast upon the array of recipes, safeguarding culinary secrets. The dynamic homepage beckons with tantalizing food categories and a succulent seafood section, all meticulously crafted to entice and inspire. Dive into the dashboard panel, where logged-in users can not only manage their information but also indulge in the joy of culinary creation through seamless CRUD operations. With React.js at its core, Firebase handling authentication and data management, and a touch of Tailwind CSS for styling finesse, 'Tasty Recipes' offers a delectable experience for both foodies and tech enthusiasts alike. Ready to embark on your culinary adventure? Simply clone the repository, navigate to the project directory, install dependencies with npm install, configure Firebase for authentication, and launch the servers with npm run dev. Bon app√©tit!",
        "email": "antu.das.619@gmail.com",
        "number": "+8801885720409.",
        "clientRepo": "https://github.com/antu619/tasty-recipes",
        "serverRepo": "https://github.com/antu619/tasty-recipes-server",
        "live": "https://tasty-recipes-b8ce6.web.app/"
    }
]